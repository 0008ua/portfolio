// @import "~bootstrap/scss/bootstrap";
@use "sass:map";
@import "./styles/bootstrap";
@import "./styles/fonts-icons";

.contact {
  min-height: calc(100vh - #{$nav-height});
}

.welcome-block {
  min-height: calc(100vh - #{$nav-height});
  &__feed {
    margin: 2rem auto;
  }
}

.project-block {
  // min-height: calc(100vh - #{$nav-height});
  background-color: $white;
  border: 1px solid $gray-400;
  border-radius: 0.5rem;
  &__header {
    // margin-top: 1rem;
    // margin-bottom: 3rem;
    margin-bottom: 3rem;
  }
  &__img {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 2rem;
  }
  &__description {
    // display: inline-block;
    margin-bottom: 2rem;
  }
  &__logo {
    margin-bottom: 2rem;

    // display: flex;
    // justify-content: center;
    // align-items: center;
    // margin-bottom: 2rem;
  }
}

.header-block {
  &__header {
    border-radius: 0.5rem 0.5rem 0 0;
    // border-top: 1px solid $gray-400;
    display: flex;
    justify-content: space-around;
    align-items: center;
    background-color: $gray-300;
    padding-top: 1rem;
    padding-bottom: 1rem;
  }
}

.logo-block {
  padding-top: 1rem;
  padding-bottom: 1rem;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
  align-items: center;
  &__link {
  }
  &__logo {
    height: 30px;
    width: auto;
    transition-duration: 0.5s;
    &_project {
      margin: 1rem 1rem;
      &:hover {
        @extend .shadow-lg, .bg-light, .rounded;
      }
    }
    &_main {
      margin: 1rem 0.5rem;
      &:hover {
        @extend .shadow-lg, .rounded;
        background-color: $gray-200;
      }
    }
  }
}

.leading-text {
  font-weight: 700;
  // font-size: 3.25rem!important;
  // line-height: 3.5rem !important;
  // margin-bottom: 1rem;
  // margin-top: 1rem;
  &_regular {
    color: $dark;
  }
  &_success {
    color: $success;
  }
  &_primary {
    color: $primary;
  }
  &_highlited {
    font-weight: 800;
  }
  &_info {
    color: $info;
  }
}

.logo {
  height: 60px;
  width: auto;
  margin: 0.5rem 1rem;
  // border: 1px solid $gray-400;
  // border-radius: 15%;
}

$mobH: 300px;
$mobW: 145px;
$mobRatio: ($mobH/$mobW);
$tabH: 300px;
$tabW: 226px;
$tabRatio: ($tabH/$tabW);
$monH: 300px;
$monW: 484px;
$monRatio: ($monH/$monW);

$img-container-heigth: (
  "xs": 180px,
  "sm": 230px,
  "md": 300px,
  "lg": 300px,
  "xl": 300px,
);
$img-container-width: (
  "xs": 100%,
  "sm": 100%,
  "md": 90%,
  "lg": 80%,
  "xl": 80%,
);

@function mobParams($brakepoint) {
  $height: (
    "xs": 115px,
    "sm": 140px,
    "md": 175px,
    "lg": 175px,
    "xl": 175px,
  );

  $offset: (
    "xs": -50px,
    "sm": -50px,
    "md": -50px,
    "lg": -50px,
    "xl": -50px,
  );
  $width: ((map.get($height, $brakepoint) / $mobRatio));
  @return ("width": $width, "height": map.get($height, $brakepoint), "offset": map.get($offset, $brakepoint));
}

@function tabParams($brakepoint) {
  $height: (
    "xs": 155px,
    "sm": 180px,
    "md": 225px,
    "lg": 225px,
    "xl": 225px,
  );
  $offset: (
    "xs": 70px,
    "sm": 70px,
    "md": 70px,
    "lg": 70px,
    "xl": 70px,
  );
  $width: ((map.get($height, $brakepoint) / $tabRatio));
  @return ("width": $width, "height": map.get($height, $brakepoint), "offset": map.get($offset, $brakepoint));
}

@function monParams($brakepoint) {
  $height: $img-container-heigth;
  // $height: (
  //   "xs": 200px,
  //   "sm": 230px,
  //   "md": 300px,
  //   "lg": 300px,
  //   "xl": 300px,
  // );
  $offset: (
    "xs": 25px,
    "sm": 25px,
    "md": 30px,
    "lg": 0px,
    "xl": 0px,
  );

  $width: ((map.get($height, $brakepoint) / $monRatio));
  @return ("width": $width, "height": map.get($height, $brakepoint), "offset": map.get($offset, $brakepoint));
}

.img-container {
  position: relative;
  @each $breakpoint in $breakpoints {
    @include media-breakpoint-up(#{$breakpoint}) {
      height: map.get($img-container-heigth, (#{$breakpoint}));
      width: map.get($img-container-width, (#{$breakpoint}));
    }
  }

  &__mob {
    position: absolute;
    bottom: 0;
    width: auto;
    @each $breakpoint in $breakpoints {
      @include media-breakpoint-up(#{$breakpoint}) {
        height: map.get(mobParams(#{$breakpoint}), "height");
        left: calc(
          calc(
              calc(50% - (#{map.get(monParams(#{$breakpoint}), "width")} / 2)) + #{map.get(
                  monParams(#{$breakpoint}),
                  "offset"
                )}
            ) + #{map.get(monParams(#{$breakpoint}), "width")} + #{map.get(mobParams(#{$breakpoint}), "offset")}
        );
      }
    }
  }

  &__tab {
    position: absolute;
    bottom: 0;
    width: auto;
    @each $breakpoint in $breakpoints {
      @include media-breakpoint-up(#{$breakpoint}) {
        height: map.get(tabParams(#{$breakpoint}), "height");

        left: calc(
          calc(
              calc(50% - (#{map.get(monParams(#{$breakpoint}), "width")} / 2)) + #{map.get(
                  monParams(#{$breakpoint}),
                  "offset"
                )}
            ) - #{map.get(tabParams(#{$breakpoint}), "width")} + #{map.get(tabParams(#{$breakpoint}), "offset")}
        );
      }
    }
  }

  &__mon {
    position: absolute;
    width: auto;
    bottom: 0;
    @each $breakpoint in $breakpoints {
      @include media-breakpoint-up(#{$breakpoint}) {
        height: map.get(monParams(#{$breakpoint}), "height");
        left: calc(
          calc(50% - (#{map.get(monParams(#{$breakpoint}), "width")} / 2)) + #{map.get(
              monParams(#{$breakpoint}),
              "offset"
            )}
        );
      }
    }
  }
}

.navbar_scrolled-down {
  transform: translateY(-100%);
  transition: all 0.3s ease-in-out;
}
.navbar_scrolled-up {
  transform: translateY(0);
  transition: all 1s ease-in-out;
}
