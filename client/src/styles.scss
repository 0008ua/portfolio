// @import "~bootstrap/scss/bootstrap";
@use "sass:map";
@import "./styles/bootstrap";
@import "./styles/fonts-icons";

.contact {
  min-height: calc(100vh - #{$nav-height});
}

.main {
  min-height: calc(100vh - (#{$nav-height} * 2));
  margin-top: 2rem;
  transition: 1s;
  background: url("/assets/images/globe-map-white.svg") center center / auto no-repeat;
  &:hover {
    background: url("/assets/images/globe-map.svg") center center / auto no-repeat;
  }
  @include media-breakpoint-up(lg) {
    margin-top: 0;
    background: none;
    &:hover {
      background: none;
    }
  }
  &__feed {
    margin: 1rem auto;
  }
  @include media-breakpoint-up(sm) {
    min-height: calc(100vh - #{$nav-height});
    &__feed {
      margin: 1rem auto;
    }
  }
  &__img {
    display: flex;
    justify-content: center;
    align-items: center;
    @include media-breakpoint-up(lg) {
      background: url("/assets/images/globe-map-lighter.svg") center center / auto no-repeat;
      margin: 2rem 0;
      transition: 1s;
      padding: 0;

      &:hover {
        background: url("/assets/images/globe-map.svg") center center / auto no-repeat;
        margin: 1rem 0;
        padding: 1rem 0;
      }
    }
  }
  &__projects-header {
    padding: 2rem;

    a {
      transition-duration: 0.5s;

      &:hover {
        cursor: pointer;
        color: $success !important;
      }
    }
    i {
      vertical-align: middle;
    }
  }
}

.project {
  background-color: $white;
  border: 1px solid $gray-400;
  border-radius: 0.5rem;

  &__header {
    margin-bottom: 2rem;
  }
  &__img {
    margin-bottom: 2rem;
  }
  &__description {
    margin-bottom: 2rem;
  }
  &__logos {
    margin-bottom: 2rem;
  }
}

.project-header {
  border-radius: 0.5rem 0.5rem 0 0;
  background-color: $gray-300;
  text-align: center;
  padding: 1rem 0.5rem;
}

.project-description {
  text-align: center;
  padding: 0.5rem;
}

.logos {
  padding: 0.5rem 0;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
  align-items: center;
  &__img {
    height: 30px;
    width: auto;
    transition-duration: 0.5s;
    &_project {
      margin: 1rem 1rem;
      &:hover {
        @extend .shadow-lg, .bg-light, .rounded;
      }
    }
    &_main {
      margin: 1rem 0.5rem;
      &:hover {
        @extend .shadow-lg, .rounded;
        background-color: $gray-200;
      }
    }
  }
}

.leading-text {
  font-weight: 700;
  &_regular {
    color: $dark;
  }
  &_success {
    color: $success;
  }
  &_primary {
    color: $primary;
  }
  &_highlited {
    font-weight: 800;
  }
  &_info {
    color: $info;
  }
}

.logo {
  height: 60px;
  width: auto;
  margin: 0.5rem 1rem;
}

$mobH: 300px;
$mobW: 145px;
$mobRatio: ($mobH/$mobW);
$tabH: 300px;
$tabW: 226px;
$tabRatio: ($tabH/$tabW);
$monH: 300px;
$monW: 484px;
$monRatio: ($monH/$monW);

$img-container-heigth: (
  "xs": 180px,
  "sm": 230px,
  "md": 300px,
  "lg": 300px,
  "xl": 300px,
);
$img-container-width: (
  "xs": 100%,
  "sm": 100%,
  "md": 90%,
  "lg": 80%,
  "xl": 80%,
);

@function mobParams($brakepoint) {
  $height: (
    "xs": 115px,
    "sm": 140px,
    "md": 175px,
    "lg": 175px,
    "xl": 175px,
  );

  $offset: (
    "xs": -50px,
    "sm": -50px,
    "md": -50px,
    "lg": -50px,
    "xl": -50px,
  );
  $width: ((map.get($height, $brakepoint) / $mobRatio));
  @return ("width": $width, "height": map.get($height, $brakepoint), "offset": map.get($offset, $brakepoint));
}

@function tabParams($brakepoint) {
  $height: (
    "xs": 155px,
    "sm": 180px,
    "md": 225px,
    "lg": 225px,
    "xl": 225px,
  );
  $offset: (
    "xs": 70px,
    "sm": 70px,
    "md": 70px,
    "lg": 70px,
    "xl": 70px,
  );
  $width: ((map.get($height, $brakepoint) / $tabRatio));
  @return ("width": $width, "height": map.get($height, $brakepoint), "offset": map.get($offset, $brakepoint));
}

@function monParams($brakepoint) {
  $height: $img-container-heigth;
  // $height: (
  //   "xs": 200px,
  //   "sm": 230px,
  //   "md": 300px,
  //   "lg": 300px,
  //   "xl": 300px,
  // );
  $offset: (
    "xs": 25px,
    "sm": 25px,
    "md": 30px,
    "lg": 0px,
    "xl": 0px,
  );

  $width: ((map.get($height, $brakepoint) / $monRatio));
  @return ("width": $width, "height": map.get($height, $brakepoint), "offset": map.get($offset, $brakepoint));
}

.devices-img {
  display: flex;
  justify-content: center;
  align-items: center;
  &__container {
    position: relative;
    @each $breakpoint in $breakpoints {
      @include media-breakpoint-up(#{$breakpoint}) {
        height: map.get($img-container-heigth, (#{$breakpoint}));
        width: map.get($img-container-width, (#{$breakpoint}));
      }
    }
  }
  &__mob {
    position: absolute;
    bottom: 0;
    width: auto;
    @each $breakpoint in $breakpoints {
      @include media-breakpoint-up(#{$breakpoint}) {
        height: map.get(mobParams(#{$breakpoint}), "height");
        left: calc(
          calc(
              calc(50% - (#{map.get(monParams(#{$breakpoint}), "width")} / 2)) + #{map.get(
                  monParams(#{$breakpoint}),
                  "offset"
                )}
            ) + #{map.get(monParams(#{$breakpoint}), "width")} + #{map.get(mobParams(#{$breakpoint}), "offset")}
        );
      }
    }
  }

  &__tab {
    position: absolute;
    bottom: 0;
    width: auto;
    @each $breakpoint in $breakpoints {
      @include media-breakpoint-up(#{$breakpoint}) {
        height: map.get(tabParams(#{$breakpoint}), "height");

        left: calc(
          calc(
              calc(50% - (#{map.get(monParams(#{$breakpoint}), "width")} / 2)) + #{map.get(
                  monParams(#{$breakpoint}),
                  "offset"
                )}
            ) - #{map.get(tabParams(#{$breakpoint}), "width")} + #{map.get(tabParams(#{$breakpoint}), "offset")}
        );
      }
    }
  }

  &__mon {
    position: absolute;
    width: auto;
    bottom: 0;
    @each $breakpoint in $breakpoints {
      @include media-breakpoint-up(#{$breakpoint}) {
        height: map.get(monParams(#{$breakpoint}), "height");
        left: calc(
          calc(50% - (#{map.get(monParams(#{$breakpoint}), "width")} / 2)) + #{map.get(
              monParams(#{$breakpoint}),
              "offset"
            )}
        );
      }
    }
  }
}

.navbar_scrolled-down {
  transform: translateY(-100%);
  transition: all 0.3s ease-in-out;
}
.navbar_scrolled-up {
  transform: translateY(0);
  transition: all 1s ease-in-out;
}
